.. -*- mode: rst -*-

Селекција (WHERE)
=================

Као што смо могли да одаберемо само податке из неких колона, тако
можемо да одаберемо и само податке из неких врста, тј. да извршимо
филтрирање података на основу неког задатог услова. Тада је потребно
да користимо следећи облик упита ``SELECT``.

.. code-block:: sql

   SELECT kolone
   FROM tabele
   WHERE uslov;

Када наведемо клаузулу ``WHERE``, кажемо да је извршена **селекција**
врста табеле, или да је извршена **рестрикција** табеле тј. да смо
извршили **филтрирање** података. Пројекцијом, дакле, избацујемо
одређене колоне из резултата, а селекцијом одређене врсте.

.. image:: ../../_images/restrikcija.png
   :width: 400
   :align: center
   :alt: Селекцијом се из табеле издвајају само неке врсте


**Ко жели да зна више?** И термин **селекција** долази из формализма
**релационе алгебре**. Назива се и **рестрикција**, што означава
*огранчиње*. Наиме, у упиту се ограничавамо само на оне врсте које
задовољавају дати услов.
         
У наставку ћемо кроз низ погодних примера илустровати различите облике
услова које можемо користити.

.. questionnote::

   Приказати све податке о ученицима првог разреда.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE razred = 1;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "ime", "prezime", "pol", "datum_rodjenja", "razred", "odeljenje"

   1, Петар, Петровић, м, 2006-07-01, 1, 1
   2, Милица, Јовановић, ж, 2006-04-03, 1, 1
   3, Лидија, Петровић, ж, 2006-12-14, 1, 1
   6, Јован, Миленковић, м, 2006-04-07, 1, 2
   7, Јована, Миленковић, ж, 2006-04-07, 1, 2
   ..., ..., ..., ..., ..., ..., ...

Овај упит се може протумачити као *прочитај све врсте из табеле ученик
код којих је разред једнак 1*. Услов у овом упиту је ``razred =
1``. Приметимо да се у услову могу наводити називи колона табеле, као
и константне вредности (у овом случају то је број 1), док се за
једнакост користи знак ``=``.

.. questionnote::

   Приказати све податке о предметима у другом разреду

.. code-block:: sql

   SELECT *
   FROM predmet
   WHERE razred = 2;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "naziv", "razred", "fond"

   4, Математика, 2, 5
   5, Психологија, 2, 2
   7, Физика, 2, 3


.. questionnote::

   Приказати све податке о ученицима који се зову ``Петар``.
   
.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = 'Петар';

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "ime", "prezime", "pol", "datum_rodjenja", "razred", "odeljenje"

   1, Петар, Петровић, м, 2006-07-01, 1, 1
   4, Петар, Миловановић, м, 2005-12-08, 2, 1
   50, Петар, Милић, м, 2006-06-14, 1, 2
   163, Петар, Платиша, м, 2005-05-30, 2, 3

У овом упиту услов је ``ime = 'Петар'``. Приметимо да је овај пут
константна вредност ``'Петар'`` наведена под једноструким наводницима,
јер је у питању ниска карактера. Исти ефекат се може добити и ако се
употребе двоструки наводници тј. ако се наведе ``"Петар"``.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = "Петар";

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "ime", "prezime", "pol", "datum_rodjenja", "razred", "odeljenje"

   1, Петар, Петровић, м, 2006-07-01, 1, 1
   4, Петар, Миловановић, м, 2005-12-08, 2, 1
   50, Петар, Милић, м, 2006-06-14, 1, 2
   163, Петар, Платиша, м, 2005-05-30, 2, 3

.. questionnote::

   Приказати све оцене добијене на писменим задацима.

.. code-block:: sql

   SELECT *
   FROM ocena
   WHERE vrsta = 'писмени задатак';

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "id_predmet", "id_ucenik", "ocena", "datum", "vrsta"

   11, 1, 1, 3, 2020-10-15, писмени задатак
   12, 1, 2, 3, 2020-10-15, писмени задатак
   13, 1, 3, 2, 2020-10-15, писмени задатак
   15, 1, 14, 3, 2020-10-15, писмени задатак
   16, 1, 15, 1, 2020-10-15, писмени задатак
   ..., ..., ..., ..., ..., ...


.. questionnote::

   Проверити да ли међу ученицима постоји неко ко се зове исто као што
   се и презива (приказати све такве ученике).

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = prezime;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "ime", "prezime", "pol", "datum_rodjenja", "razred", "odeljenje"

   201, Милић, Милић, м, 2004-11-21, 3, 1
   336, Милош, Милош, м, 2003-08-09, 4, 3

Наравно, у истом упиту се могу комбиновати пројекција и селекција.

.. questionnote::

   Приказати све идентификаторе неоправданих изостанака.

.. code-block:: sql
                
   SELECT id
   FROM izostanak
   WHERE status = 'неоправдан';

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id"

   2
   5
   9
   10
   11
   ...

   
У свим овим примерима вршили смо исљкучиво поређење коришћењем
једнакости. У даљем раду ћеш научити да језик SQL подржава и друге
релације.

