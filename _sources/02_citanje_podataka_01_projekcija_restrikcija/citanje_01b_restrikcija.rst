Рестрикција (WHERE)
===================

Као што смо могли да одаберемо само податке из неких колона, тако
можемо да одаберемо и само податке из неких врста, тј. да извршимо
филтрирање података на основу неког задатог услова. Тада је потребно
да користимо следећи облик упита ``SELECT``.

.. code-block::

   SELECT kolone
   FROM tabele
   WHERE uslov;


Кажемо да је извршена **рестрикција** табеле тј. да смо извршили
**филтрирање** података. Пројекцијом, дакле, избацујемо одређене
колоне из резултата, а рестрикцијом одређене врсте. У наставку ћемо
кроз низ погодних примера илустровати различите облике услова које
можемо користити.

.. questionnote::

   Приказати све податке о ученицима првог разреда.
   

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE razred = 1;

Овај упит се може протумачити као *прочитај све врсте из табеле ученик
код којих је разред једнак 1*. Услов у овом упиту је ``razred =
1``. Приметимо да се у услову могу наводити називи колона табеле, као
и константне вредности (у овом случају то је број 1), док се за
једнакост користи знак ``=``.

.. questionnote::

   Приказати све податке о предметима у другом разреду

.. code-block:: sql

   SELECT *
   FROM predmet
   WHERE razred = 2;


.. questionnote::

   Приказати све податке о ученицима који се зову ``Петар``.
   
.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = 'Петар';

У овом упиту услов је ``ime = 'Петар'``. Приметимо да је овај пут
константна вредност ``'Петар'`` наведена под једноструким наводницима,
јер је у питању ниска карактера. Исти ефекат се може добити и ако се
употребе двоструки наводници.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = "Петар";

.. questionnote::

   Приказати све оцене добијене на писменим задацима.

.. code-block:: sql

   SELECT *
   FROM ocena
   WHERE vrsta = 'писмени задатак';


