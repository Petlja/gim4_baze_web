Рестрикција (WHERE)
===================

Као што смо могли да одаберемо само податке из неких колона, тако
можемо да одаберемо и само податке из неких врста, тј. да извршимо
филтрирање података на основу неког задатог услова. Тада је потребно
да користимо следећи облик упита ``SELECT``.

.. code-block::

   SELECT kolone
   FROM tabele
   WHERE uslov;

Када наведемо клаузулу ``WHERE``, кажемо да је извршена
**рестрикција** табеле, да је извршена **селекција** неких врста
тј. да смо извршили **филтрирање** података. Пројекцијом, дакле,
избацујемо одређене колоне из резултата, а рестрикцијом одређене
врсте.

.. image:: ../../_images/restrikcija.png
   :width: 400
   :align: center
   :alt: Рестрикцијом се из табеле издвајају неке врсте


**Ко жели да зна више?** И термин **рестрикција** долази из формализма
**релационе алгебре** и означава *огранчиње*. Наиме, у упиту се
ограничавамо само на оне врсте које задовољавају дати услов.
         
У наставку ћемо кроз низ погодних примера илустровати различите облике
услова које можемо користити.

.. questionnote::

   Приказати све податке о ученицима првог разреда.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE razred = 1;

Овај упит се може протумачити као *прочитај све врсте из табеле ученик
код којих је разред једнак 1*. Услов у овом упиту је ``razred =
1``. Приметимо да се у услову могу наводити називи колона табеле, као
и константне вредности (у овом случају то је број 1), док се за
једнакост користи знак ``=``.

.. questionnote::

   Приказати све податке о предметима у другом разреду

.. code-block:: sql

   SELECT *
   FROM predmet
   WHERE razred = 2;


.. questionnote::

   Приказати све податке о ученицима који се зову ``Петар``.
   
.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = 'Петар';

У овом упиту услов је ``ime = 'Петар'``. Приметимо да је овај пут
константна вредност ``'Петар'`` наведена под једноструким наводницима,
јер је у питању ниска карактера. Исти ефекат се може добити и ако се
употребе двоструки наводници тј. ако се наведе ``"Петар"``.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = "Петар";

.. questionnote::

   Приказати све оцене добијене на писменим задацима.

.. code-block:: sql

   SELECT *
   FROM ocena
   WHERE vrsta = 'писмени задатак';


.. questionnote::

   Проверити да ли међу ученицима постоји неко ко се зове исто као што
   се и презива (приказати све такве ученике).

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime = prezime;

Наравно, у истом упиту се могу комбиновати пројекција и рестрикција.

.. questionnote::

   Приказати све идентификаторе неоправданих изостанака.

.. code-block:: sql
                
   SELECT id
   FROM izostanak
   WHERE status = 'неоправдан';
   
   
У свим овим примерима вршили смо исљкучиво поређење коришћењем
једнакости. У даљем раду ћеш научити да језик SQL подржава и друге
релације.

