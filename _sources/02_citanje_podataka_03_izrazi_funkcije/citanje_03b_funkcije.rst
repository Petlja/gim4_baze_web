.. -*- mode: rst -*-

Функције
--------

SQL подржава велики број библиотечких функција које су обично детаљно
описане у документацији одабраног система за управљање базама
података. Њихов детаљан опис превазилази домет овог курса. Поменућемо
само неколико основних.

Функција ``substr`` издваја подниску дате ниске. Аргументи су јој
ниска, почетна позиција (позиције се броје од један, а не од нула) и
број карактера.

.. questionnote::

   Издвојити имена, презимена и иницијале свих ученика.

.. code-block:: sql

   SELECT ime, prezime, substr(ime, 1, 1) || substr(prezime, 1, 1) AS inicijali
   FROM ucenik;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "ime", "prezime", "inicijali"
   :align: left

   "Петар", "Петровић", "ПП"
   "Милица", "Јовановић", "МЈ"
   "Лидија", "Петровић", "ЛП"
   "Петар", "Миловановић", "ПМ"
   "Ана", "Пекић", "АП"
   ..., ..., ...

Функција ``length`` одређује дужину ниске (број њених карактера).

.. questionnote::

   Приказати сва имена ученика која имају три слова.

.. code-block:: sql

   SELECT ime
   FROM ucenik
   WHERE length(ime) == 3;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "ime"
   :align: left

   "Ана"
   "Ана"
   "Уна"
   "Теа"
   "Вук"
   ...

Функције ``upper`` и ``lower`` преводе ниску у сва велика тј. сва мала
слова (не мењајући карактере који нису слова).

Функције ``max`` и ``min`` одређују максимум тј. минимум две (или
више) вредности које су им прослеђене. Ове функције су применљиве и на
датуме и на ниске (при чему треба обратити пажњу на колациону секвенцу
која одређује поредак ниски).


.. questionnote::

   Када би сви ученици који су имали јединице и двојке поправили те
   оцене на тројке, прикажи како би изгледала табела оцена.

.. code-block:: sql

   SELECT id, id_predmet, id_ucenik, max(ocena, 3) AS ocena, datum, vrsta
   FROM ocena;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "id", "id_predmet", "id_ucenik", "ocena", "datum", "vrsta"
   :align: left

   "11", "1", "1", "3", "2020-10-15", "писмени задатак"
   "12", "1", "2", "3", "2020-10-15", "писмени задатак"
   "13", "1", "3", "3", "2020-10-15", "писмени задатак"
   "15", "1", "14", "3", "2020-10-15", "писмени задатак"
   "16", "1", "15", "3", "2020-10-15", "писмени задатак"
   ..., ..., ..., ..., ..., ...

Изразом ``max(ocena, 3)`` све оцене које су мање од 3 се претварају у
3, док оне веће од 3 остају непромењене.

Функција ``round`` врши заокруживање датог реалног броја на најближи
цео број или на одређени број децимала.

Функција ``CAST(... AS ...)`` врши конверзију типова података. На
пример, вредност израза ``CAST('123' AS INTEGER)`` је цео број 123.

Постоји одређен број функција за рад са датумима и
временом. Најопштија од њих је фунција ``strftime`` која форматира
дати датум или време у задатом формату, а може се употребити и за
издвајање одређених делова датума или времена. Сваки део датума описан
је одређеним спецификатором:

- ``%Y`` -- година
- ``%m`` -- месец
- ``%d`` -- дан
- ``%H`` -- сат
- ``%H`` -- минут
- ``%H`` -- секунд

На пример, ``strftime('%d/%m/%Y', datum_rodjenja)`` форматира датум
рођења прочитан из табеле ученика у формату ``дан/месец/година``. Ако
се уместо датума прочитаног из базе наведе ``now`` користи се текући
датум и време. На пример, ``strftime('%Y-%m-%d', now)`` чита тренутни
датум у подразумеваном формату. С обзиром на значај тог подразумеваног
формата записа датума, уместо ``strftime`` могуће је употребити
функцију ``date`` која форматира датум у подразумеваном формату
``година-месец-дан``. Слично, функција ``time`` форматира време у
подразумеваном формату ``%H:%M:%S`` тј. ``сат:минут:секунд``.

Списак и детаљан опис свих подржаних функција је доступан у званичној
документацији система SQLite
(https://www.sqlite.org/lang_corefunc.html и
https://www.sqlite.org/lang_datefunc.html).
