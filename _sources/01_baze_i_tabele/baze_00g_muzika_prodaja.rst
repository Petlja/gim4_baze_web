База компаније за продају дигиталних композиција -- продаја
-----------------------------------------------------------

У претходном поглављу смо приказали организацију дела базе података
која се тиче композиција, албума, извођача и листа песама. У овом
поглављу ћемо надоградити ту базу података информацијама релевантним
за продају композиција. Кренимо од спецификације.


Спецификација
.............

У компанији постоји неколико запослених особа. За сваког запосленог
познати су следећи подаци:

- име, презиме
- титула
- датум рођења
- датум запослења
- адреса
- град
- држава/покрајина
- поштански код
- телефон
- факс
- мејл

Запослени имају свог нардређеног и на тај начин су организовани у
хијерархијску, дрволику структуру.

Чува се листа свих купаца. За сваког купца су познати следећи подаци.

- име, презиме
- компанија у чије име купује (ако не купује сам за себе)
- адреса
- град
- држава/покрајина
- поштански код
- телефон
- факс
- мејл

За купца може бити задужен неко од запослених (он му пружа комплетну
кориснчику подршку).

Корисници врше наруџбине и у склопу сваке нарудџбине могу да наруче и
више композиција. За сваку наруџбину познати су следећи подаци.

- датум наруџбине
- адреса наплате
- град наплате
- поштански код наплате
- држава/покрајина наплате
- укупна цена наруџбине

За сваку наруџбину познат је и списак свих композиција на тој
наруџбини.


Превођење спецификације у табеле
................................

Јасно препознајмо врсту ентитета *запослени* (``Employee``) и податке
о запосленима ћемо чувати у табели са колонама ``EmployeeId``,
``FirstName``, ``LastName``, ``Title``, ``BirthDate``, ``HireDate``,
``Address``, ``City``, ``State``, ``Country``, ``PostalCode``,
``Phone``, ``Fax``, ``Email``, где је ``EmployeeId`` вештачки
целобројни примарни кључ. Сваки запослени има *нула или једног*
надређеног, а може бити надређени за *нула или више*
запослених. Дакле, постоји веза *један-према-више* од ентитета
запослени до њега самог, међутим, та веза није ни по чему значајном
различита од веза између два различита ентитета. Ову везу можемо
реализовати додавањем колоне ``ReportsTo`` у којој се чува примарни
кључ запосленог (који може бити и ``NULL``). Та колона је уједно
страни кључ у табели запослених.

Друга врста ентитета који се јасно препознаје је *купац*
(``Customer``) и податке о купцима ћемо чувати у табели са колонама
``CustomerId`` (вештачки целобројни примарни кључ), ``FirstName``,
``LastName``, ``Company``, ``Address``, ``City``, ``State``,
``Country``, ``PostalCode``, ``Phone``, ``Fax`` и ``Email``. Сваки
купац може имати *нула или једног* запосленог који брине о њему, док
сваки запослени може имати *нула или више* купаца о којима брине. Ова
се веза може реализовати додавањем колоне ``SupportRepId`` у табели
купаца која чува примарни кључ за њега задуженог запосленог (та колона
је страни кључ у табели запослених).

Трећа врста ентитета која се јасно препознаје из спецификације је
*наруџбеница* (``Invoice``) и податке о наруџбеницама ћемо чувати у
табели са колонама ``InvoiceId`` (вештачки целобројни примарни кључ),
``InvoiceDate``, ``BillingAddress``, ``BillingCity``,
``BillingState``, ``BillingCountry``, ``BillingPostalCode``,
``Total``. Свакој наруџбеници одговара *тачно један* купац, док сваки
купац може имати *нула или више* наруџбеница. Ову везу реализујемо
тако што у табели наруџбеница додајемо колону ``CustomerId`` која
садржи примарни кључ купца (та колона је страни кључ). На крају, свака
наруџбеница садржи нула или више композиција, док се свака композиција
може налазити на нула или више наруџбеница. Ову везу типа
*више-према-више* морамо реализовати креирањем посебне табеле
``invoice_item`` која ће садржати примарни кључ композиције
(``TrackId``), примарни кључ наруџбенице (``InvoiceId``), број тих
композиција које се наручују (``Quantity``) и јединичну цену те
композиције (``UnitPrice``) у склопу те наруџбине.

