.. -*- mode: rst -*-
   
Провера постојања (EXISTS)
--------------------------

Некада желимо да издвојимо само оне врсте за које корелисани подупит
враћа непразну (или празну) табелу тј. ако се утврди да постоји (или
да не постоји) нека врста која задовољава услов корелисаног подупита.
За то се може користити услов ``EXISTS`` (или ``NOT EXISTS``, који је
заправо само негација услова ``EXISTS``).

.. questionnote::

   Приказати имена ученика који имају неоправдане изостанке.
   
.. code-block:: sql
                
   SELECT id, ime, prezime
   FROM ucenik
   WHERE EXISTS (SELECT *
                 FROM izostanak
                 WHERE izostanak.id_ucenik = ucenik.id AND status = 'неоправдан');

Наравно, постоје и други начини да се овај упит реализује. На пример,
можемо спојити табелу ученика и табелу изостанака, груписати изостанке
по свим ученицима, и приказати имена и презимена за сваку групу
(приметимо да овде не примењујемо ни једну агрегатну функцију на
формиране групе).

.. code-block:: sql

   SELECT ucenik.id, ime, prezime
   FROM ucenik JOIN
        izostanak on izostanak.id_ucenik = ucenik.id
   WHERE status = 'неоправдан'
   GROUP BY ucenik.id;
                
У наредном проблему, можемо искористити услов непостојања ``NOT
EXISTS``.
                 
.. questionnote::
           
   Приказати имена ученика који немају нерегулисаних изостанака.
   
.. code-block:: sql
                
   SELECT id, ime, prezime
   FROM ucenik
   WHERE NOT EXISTS (SELECT *
                     FROM izostanak
                     WHERE izostanak.id_ucenik = ucenik.id AND status = 'нерегулисан');
