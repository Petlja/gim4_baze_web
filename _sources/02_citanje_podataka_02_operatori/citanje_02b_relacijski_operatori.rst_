.. -*- mode: rst -*-

Релацијски оператори (<, <=, >, >=, BETWEEN, IN)
================================================

До сада смо у свим упитима употребљавали само релацијске операторе
једнако (``=``) и различито (``!=``). Језик SQL подржава још неке
релацијске операторе. Над бројевима (као и на још неким типовима) се
могу употребљавати и релацијски оператори поретка ``<``, ``<=``, ``>``
и ``>=``.

.. questionnote::

   Приказати све ученике старијих разреда


Приказујемо све ученике код којих је разред већи или једнак од 3.
   
.. code-block:: sql
                
   SELECT *
   FROM ucenik
   WHERE razred >= 3;

Овај упит можемо протумачити као *прочитај све врсте из табеле ученика
из којих је разред већи или једнак 3*. Алтернативно, приказујемо све
ученике код којих је разред строго већи од два.
   
.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE razred > 2;


.. questionnote::
   
   Приказати све податке о предметима у прва два разреда
   
.. code-block:: sql

   SELECT *
   FROM predmet
   WHERE razred <= 2;
   
Оператори поретка се могу применити и на другим типовима података (на
пример, нискама и датумима).


.. questionnote::

   Приказати све податке о учениицма који су рођени после првог јуна 2006.

   
.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE datum_rodjenja > '2006-06-01';

Приметимо да се датум наводи као ниска карактера, између једноструких
наводника, у формату ``gggg-mm-dd``.


.. questionnote::

   Приказати све податке о ученицима који су на време кренули у школу током
   2006. године (то су они који су рођени између 1. марта 2006. и 1. марта 
   2007. године, не укључујући последњи датум)

.. code-block:: sql
                
   SELECT *
   FROM ucenik
   WHERE '2006-03-01' <= datum_rodjenja AND datum_rodjenja < '2007-03-01';

Припадност интервалу се може испитивати и помоћу посебног оператора
``BETWEEN ... AND ...``. Обе границе које се наведу се укључују. На
пример, услов ``ocena BETWEEN 2 AND 4`` допушта вредности 2, 3, и 4.
Овај оператор је могуће применити и на датуме.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE datum_rodjenja BETWEEN '2006-03-01' AND '2007-02-28';

Оператор ``BETWEEN`` се може комбиновати и са другачијим условима.

.. questionnote::

   Приказати податке о свим регулисаним изостанцима на првом часу
   добијеним у 2021. години.

.. code-block:: sql

   SELECT *
   FROM izostanak
   WHERE datum BETWEEN '2021-01-01' AND '2021-12-01' AND
         status != 'нерегулисан' AND cas = 1;

                
.. questionnote::

   Приказати све ученике који су у дневнику одељења I1 пре Петровића

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE razred = 1 AND odeljenje = 1 AND prezime < 'Петровић';

У овом упиту смо презиме упоредили са Петровић, помоћу оператора ``<``
и тада се поређење врши по азбучном редоследу (каже се,
лексикографски). За примену овог оператора над нискама је веома битно
да је за колону подешена одговарајућа колациона секвенца (подсетимо
се, у колони презиме поставили смо колациону секвенцу ``UNICODE``, што
омогућава да се и ћирилички карактери исправно пореде).

Још један често коришћен оператор који се примењује над текстуалним
подацима (нискама) је оператор ``LIKE`` којим се може наметнути облик
(шаблон) ниске који желимо да издвојимо (или изоставимо) из резултата.

.. questionnote::

   Приказати све ученике чије презиме почиње на слово ``П``.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE prezime LIKE 'П%';

Шаблон презимена која се траже је описан у облику ``'П%'``, што значи
да она почињу словом `П` након чега иде произвољан низ карактера
(карактер ``%`` у склопу шаблона означава било какав низ карактера,
док карактер ``_`` означава било који карактер).
   
.. questionnote::

   Приказати све ученике чији су иницијали ``ПП``.
   

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE ime LIKE 'П%' AND prezime LIKE 'П%';

.. questionnote::
   
   Приказати све ученице чије се име не завршава на `а`.

.. code-block:: sql

   SELECT *
   FROM ucenik
   WHERE pol = 'ж' AND NOT (ime LIKE '%а');

У овом примеру је употребљен оператор ``NOT`` да би се приказали само
они ученици чије се презиме НЕ уклапа у дати шаблон. Шаблон ``'%а'``
означава произвољан низ карактера иза којих иде ниска ``а``.

.. questionnote::

   Приказати имена и презимена ученика чије се презиме завршава на
   ``ић``, али не и на ``вић``.

.. code-block:: sql

   SELECT ime, prezime
   FROM ucenik
   WHERE (prezime LIKE '%ић') AND NOT (prezime LIKE '%вић');

Још један користан оператор може бити оператор ``IN`` којим се
проверава да ли вредност припада неком датом скупу
елемената. Прикажимо његову употребу на следећем примеру.

.. questionnote::
           
   Издвојити податке о свим предметима који се зову ``Математика``,
   ``Физика`` или ``Рачунарство и информатика``.

.. code-block:: sql

   SELECT *
   FROM predmet
   WHERE naziv IN ('Математика', 'Физика', 'Рачунарство и информатика')
