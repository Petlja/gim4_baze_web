.. -*- mode: rst -*-

Агрегатне функције (SUM, AVG, MIN, MAX, COUNT)
----------------------------------------------

У применама је вемоа често потребно да се израчунају одређене статистике серија
података. То може да буде збир, производ, просек тј. аритметичка средина,
најмања или највећа вредност и слично. Приликом израчунавања ових
статистика од серије елемената (тј. од свих елемената једне колоне
табеле) гради се један резултат тј. сви подаци се агрегирају у
јединствен резултат. Зато се ове функције називају **агрегатне
функције**.

Илуструјмо набројане функције на неколико примера. 

Збир елемената
''''''''''''''

Збир елемената неке колоне може да се добије агрегатном функцијом
``SUM``.

.. questionnote::
   
   Приказати укупан фонд часова свих предмета.

.. code-block:: sql

   SELECT SUM(fond)
   FROM predmet;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "SUM(fond)"
   :align: left

   "36"

Овај упит можемо да прочитамо као 

| **ОДАБЕРИ** збир колоне `фонд`
| **ИЗ РЕДОВА** табеле `предмет`

Примећујемо да је назив колоне резултата исти као израз употребљен 
након речи ``SELECT``, овде ``SUM(fond)``. То можемо да променимо 
навођењем тзв. **алијаса** након кључне речи ``AS``.

.. code-block:: sql
                
   SELECT SUM(fond) AS ukupan_fond
   FROM predmet;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "ukupan_fond"
   :align: left

   "36"

Агрегатне функције се веома често примењују након филтрирања
(селекције само неких врста).

.. questionnote::
   
   Приказати укупан фонд часова предмета из првог разреда.
 
.. code-block:: sql
                
   SELECT SUM(fond) AS ukupan_fond
   FROM predmet
   WHERE razred = 1;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "ukupan_fond"
   :align: left

   "14"

Овај упит можемо да прочитамо као:

| **ОДАБЕРИ** збир колоне `фонд`, означен **КАО** `укупан фонд`
| **ИЗ РЕДОВА** табеле `предмет`
| **КОД КОЈИХ** је разред једнак 1


Просек елемената
''''''''''''''''

Просек (аритметичка средина) елемената неке колоне може да се добије
агрегатном функцијом ``AVG``.

.. questionnote::

   Приказати просечну оцену из предмета са идентификатором 1
   
.. code-block:: sql

   SELECT AVG(ocena) AS prosecna_ocena
   FROM ocena
   WHERE id_predmet = 1;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "prosecna_ocena"
   :align: left

   "3.095505617977528"


Просечне вредности се обично заокружују на одређен број
децимала. Подсетимо се, заокруживање може да се изврши применом
функције ``round``.

.. code-block:: sql

   SELECT round(AVG(ocena), 2) AS prosecna_ocena
   FROM ocena
   WHERE id_predmet = 1;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "prosecna_ocena"
   :align: left

   "3.1"

Најмања и највећа вредност
''''''''''''''''''''''''''
   
Најмању вредност у некој колони можемо да одредимо функцијом ``MIN``, а
највећу функцијом ``MAX``. Ове функције могу да се примене и на бројеве
и на ниске и на датуме (при чему је у случају примене на ниске веома
битно која колациона секвенца се користи).
   
.. questionnote::

   Приказати најнижу оцену на писменом задатку из математике
   одржаном 18. маја 2021 (та математика има идентификатор 1).
   
.. code-block:: sql
                
   SELECT MIN(ocena) AS najniza_ocena
   FROM ocena
   WHERE id_predmet = 1 AND datum = '2021-05-18' AND vrsta = 'писмени задатак';

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "najniza_ocena"
   :align: left

   NULL

.. questionnote::

   Приказати датум када је у дневник уписана последња оцена из српског
   језика за први разред
   
.. code-block:: sql

   SELECT MAX(datum) AS poslednji_datum
   FROM ocena
   WHERE id_predmet = 2;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "poslednji_datum"
   :align: left

   "2020-12-03"

Број елемената
''''''''''''''

Често желимо да одредимо број елемената неке серије. У случају упита
читања података из база то се најчешће своди на то да се изброје врсте
у резултату упита. За то се користи агрегатна функција
``COUNT``. Пошто је број врста у резултату једнак броју елемената
сваке појединачне колоне, обично се уместо назива колоне, као аргумент
ове функције просто наводи звездица ``*``.
   
.. questionnote::

   Приказати број ученика у табели ученика.

.. code-block:: sql
                
   SELECT COUNT(*) AS broj_ucenika
   FROM ucenik;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "broj_ucenika"
   :align: left

   "346"

Овај упит можемо да прочитамо као:

| **ОДАБЕРИ** број редова резултата, означен **КАО** `број ученика`
| **ИЗ РЕДОВА** табеле `ученик`

Исти резултат би се добио ако би се тражило пребројавање елемената било
које конкретне колоне. На пример.

.. code-block:: sql
                
   SELECT COUNT(ime) AS broj_ucenika
   FROM ucenik;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "broj_ucenika"
   :align: left

   "346"

И пребројавање често иде у комбинацији са филтрирањем (селекцијом само
неких врста).
   
.. questionnote::

   Приказати укупан број предмета у првом разреду
   
.. code-block:: sql

   SELECT COUNT(*) AS broj_predmeta
   FROM predmet
   WHERE razred = 1;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "broj_predmeta"
   :align: left

   "4"

Агрегатне функције могу да се комбинују и са елиминисањем дупликата.

.. questionnote::

   Приказати укупан број различитих презимена ученика.

   
.. code-block:: sql

   SELECT COUNT(*) AS broj_ucenika, COUNT(DISTINCT prezime) AS broj_prezimena
   FROM ucenik;

Извршавањем упита добија се следећи резултат:

.. csv-table::
   :header:  "broj_ucenika", "broj_prezimena"
   :align: left

   "346", "112"

