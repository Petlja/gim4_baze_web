.. -*- mode: rst -*-

Читање података из табеле
=========================

У наставку ћемо дати приказ основних појмова упитног језика SQL. SQL
омогућава корисницима да веома једноставно из базе података читају оне
податке који су им потребни. То се ради постављањем **упита**. Основну
врсту упита чине тзв. упити ``SELECT`` који служе да се из базе
прочитају жељени подаци. Постоје и друге врсте упита.

- Упити ``INSERT`` служе да се у базу упишу нови подаци,
- упити ``DELETE`` да се из базе обришу неки подаци, а
- упити ``UPDATE`` да се неки подаци у бази ажурирају (измене).

Упитима се могу и креирати и брисати табеле, подешавати различита
ограничења и слично. У наставку ћемо се бавити упитима ``SELECT``, док
ћемо остале врсте упита обрадити касније.

Сваки, па и најједноставнији упит ``SELECT`` мора да садржи следеће
елементе:

.. code-block:: sql

   SELECT kolone
   FROM tabele;

Овим се систему налаже да нам из наведене табеле (или више табела)
издвоји све податке који су дати у наведеним колонама. Језик није
осетљив на разлику између великих и малих слова (могуће је писати и
``select`` и ``from``), али ћемо ми у складу са устаљеном праксом, у
наставку све кључне речи писати великим словима. Све белине у упиту се
занемарују, па самим тим није битно да ли се упит пише у једном или
више редова. Прегледности ради, ми ћемо све упите писати у више редова.

За почетак ћемо увек читати податке само из једне
табеле. Најједноставнији случај је онај у коме се жели читање свих
података из једне табеле. Тада се уместо имена свих колона може
навести само симбол ``*``. Размотримо следећи пример.
   
.. questionnote::

   Приказати све податке о ученицима који су уписани у бази.

.. code-block:: sql

   SELECT *
   FROM ucenik;

Овај упит може да се прочита као *прочитај све врсте из табеле
ученика*.  Он је еквивалентан следећем, али је, наравно, много
једноставнији.

.. code-block:: sql

   SELECT id, ime, prezime, pol, datum_rodjenja, razred, odeljenje
   FROM ucenik;

